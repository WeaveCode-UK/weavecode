name: Build and Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Build Frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build
        
    - name: Build Backend Image
      working-directory: ./backend
      run: |
        docker build -t weavecode-backend:${{ github.sha }} .
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          echo "🚀 Iniciando deploy do WeaveCode..."
          cd /opt/weavecode
          
          # Parar serviços existentes
          echo "⏹️ Parando serviços..."
          docker-compose -f deploy/docker-compose.prod.yml down || true
          
          # Fazer backup do banco
          echo "💾 Fazendo backup do banco..."
          ./backup-postgres.sh || true
          
          # Atualizar código
          echo "📥 Atualizando código..."
          git pull origin main
          
          # Copiar arquivos de produção
          echo "📋 Copiando arquivos de produção..."
          cp deploy/docker-compose.prod.yml docker-compose.yml
          cp deploy/Caddyfile Caddyfile
          
          # Configurar variáveis de ambiente
          echo "⚙️ Configurando variáveis de ambiente..."
          if [ ! -f .env ]; then
            cat > .env << 'EOF'
          NODE_ENV=production
          PORT=4000
          JWT_SECRET=weavecode_jwt_secret_production_$(date +%s)
          DATABASE_URL=postgresql://weavecode:weavecode123@postgres:5432/weavecode
          STRIPE_SECRET_KEY=sk_test_placeholder
          PAYPAL_CLIENT_ID=placeholder
          PAYPAL_CLIENT_SECRET=placeholder
          SENDGRID_API_KEY=placeholder
          CHATWOOT_API_KEY=placeholder
          EOF
          fi
          
          # Subir serviços
          echo "🚀 Subindo serviços..."
          docker-compose up -d
          
          # Aguardar serviços ficarem saudáveis
          echo "⏳ Aguardando serviços ficarem saudáveis..."
          sleep 30
          
          # Verificar saúde dos serviços
          echo "🔍 Verificando saúde dos serviços..."
          ./health-check.sh
          
          echo "✅ Deploy concluído com sucesso!"
        
    - name: Health Check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd /opt/weavecode
          echo "🔍 Verificação final de saúde..."
          ./health-check.sh
          
    - name: Notify Success
      if: success()
      run: |
        echo "✅ Deploy concluído com sucesso!"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "VPS: ${{ secrets.VPS_HOST }}"
        
    - name: Notify Failure
      if: failure()
      run: |
        echo "❌ Deploy falhou!"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "VPS: ${{ secrets.VPS_HOST }}"
