# Script de Limpeza Docker ap√≥s Migra√ß√£o para Railway
# WeaveCode - info@weavecode.co.uk

Write-Host "üßπ Iniciando limpeza dos arquivos Docker..." -ForegroundColor Green

# Confirmar se a migra√ß√£o foi bem-sucedida
$confirm = Read-Host "‚ö†Ô∏è Confirma que a migra√ß√£o para Railway foi bem-sucedida? (s/N)"
if ($confirm -ne "s" -and $confirm -ne "S") {
    Write-Host "‚ùå Limpeza cancelada. Execute novamente ap√≥s confirmar a migra√ß√£o." -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Migra√ß√£o confirmada. Prosseguindo com a limpeza..." -ForegroundColor Green

# Lista de arquivos Docker para remover (j√° removidos, mas mantidos para refer√™ncia)
$dockerFiles = @(
    "docker-compose.yml",
    "docker-compose.prod.yml",
    "backend/Dockerfile"
)

# Lista de diret√≥rios Docker para remover (j√° removidos, mas mantidos para refer√™ncia)
$dockerDirs = @(
    "deploy"
)

Write-Host "‚ÑπÔ∏è Todos os arquivos Docker j√° foram removidos anteriormente!" -ForegroundColor Blue
Write-Host "‚úÖ Projeto est√° limpo e configurado para Railway" -ForegroundColor Green

# Atualizar .gitignore para remover refer√™ncias Docker
Write-Host "üìù Atualizando .gitignore..." -ForegroundColor Yellow
$gitignorePath = ".gitignore"
if (Test-Path $gitignorePath) {
    $gitignoreContent = Get-Content $gitignorePath -Raw
    $gitignoreContent = $gitignoreContent -replace "# Docker.*\n", ""
    $gitignoreContent = $gitignoreContent -replace "docker-compose\.yml\n", ""
    $gitignoreContent = $gitignoreContent -replace "Dockerfile\n", ""
    Set-Content $gitignorePath $gitignoreContent
    Write-Host "‚úÖ .gitignore atualizado" -ForegroundColor Green
}

# Criar arquivo de backup da limpeza
$backupFile = "RAILWAY_MIGRATION_COMPLETE_$(Get-Date -Format 'yyyyMMdd_HHmmss').txt"
$backupContent = @"
# Migra√ß√£o para Railway Conclu√≠da - WeaveCode
# Data: $(Get-Date -Format 'dd/MM/yyyy HH:mm:ss')

## Status da Migra√ß√£o:
- ‚úÖ Todos os arquivos Docker removidos
- ‚úÖ Diret√≥rio deploy/ removido
- ‚úÖ GitHub Actions antigos removidos
- ‚úÖ README.md atualizado
- ‚úÖ Projeto configurado para Railway
- ‚úÖ Deploy autom√°tico via GitHub Actions configurado

## Arquivos Removidos:
$($dockerFiles -join "`n")

## Diret√≥rios Removidos:
$($dockerDirs -join "`n")

## Observa√ß√µes:
- Migra√ß√£o para Railway conclu√≠da com sucesso
- Projeto agora est√° 100% configurado para Railway
- Deploy autom√°tico via GitHub Actions configurado
- Documenta√ß√£o atualizada

## Pr√≥ximos Passos:
1. Verificar se todas as aplica√ß√µes est√£o funcionando no Railway
2. Configurar dom√≠nios personalizados
3. Testar deploy autom√°tico
4. Monitorar logs e m√©tricas no Railway

---
WeaveCode - info@weavecode.co.uk
"@

Set-Content $backupFile $backupContent
Write-Host "üìã Backup da migra√ß√£o salvo em: $backupFile" -ForegroundColor Blue

Write-Host "üéâ Limpeza Docker conclu√≠da com sucesso!" -ForegroundColor Green
Write-Host "üìö Consulte o arquivo de backup para detalhes: $backupFile" -ForegroundColor Blue
Write-Host "üöÄ Seu projeto agora est√° totalmente configurado para Railway!" -ForegroundColor Green
